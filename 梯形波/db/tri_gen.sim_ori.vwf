/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	PRINT_OPTIONS = "Print_options_version 6\
range_start 0ps\
range_end 1.0us\
width 1\
names_percentage 25\
comments 1\
grid_lines 1\
time_bars 1\
name_every_page 0\
expand_groups 0\
print_all 1\
print_row_height 100";
	DATA_OFFSET = 0.0;
	DATA_DURATION = 200000.0;
	SIMULATION_TIME = 200000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("d_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 9;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("d_out[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "d_out";
}

SIGNAL("d_out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "d_out";
}

SIGNAL("d_out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "d_out";
}

SIGNAL("d_out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "d_out";
}

SIGNAL("d_out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "d_out";
}

SIGNAL("d_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "d_out";
}

SIGNAL("d_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "d_out";
}

SIGNAL("d_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "d_out";
}

SIGNAL("d_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "d_out";
}

SIGNAL("res")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2000;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
		}
	}
}

TRANSITION_LIST("d_out[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5115.259;
		NODE
		{
			REPEAT = 13;
			LEVEL 1 FOR 3800.0;
			LEVEL 0 FOR 10220.0;
		}
		LEVEL 1 FOR 3800.0;
		LEVEL 0 FOR 8824.741;
	}
}

TRANSITION_LIST("d_out[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2555.272;
		NODE
		{
			REPEAT = 14;
			LEVEL 1 FOR 2560.0;
			LEVEL 0 FOR 3800.0;
			LEVEL 1 FOR 2560.0;
			LEVEL 0 FOR 5100.0;
		}
		LEVEL 1 FOR 1164.728;
	}
}

TRANSITION_LIST("d_out[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1275.428;
		NODE
		{
			REPEAT = 14;
			LEVEL 1 FOR 1280.0;
			LEVEL 0 FOR 1280.0;
			LEVEL 1 FOR 1280.0;
			LEVEL 0 FOR 3800.0;
			LEVEL 1 FOR 1280.0;
			LEVEL 0 FOR 1280.0;
			LEVEL 1 FOR 1280.0;
			LEVEL 0 FOR 2540.0;
		}
		LEVEL 1 FOR 1280.0;
		LEVEL 0 FOR 1164.572;
	}
}

TRANSITION_LIST("d_out[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 635.281;
		NODE
		{
			REPEAT = 14;
			NODE
			{
				REPEAT = 4;
				LEVEL 1 FOR 640.0;
				LEVEL 0 FOR 640.0;
			}
			LEVEL 1 FOR 2520.0;
			NODE
			{
				REPEAT = 4;
				LEVEL 0 FOR 640.0;
				LEVEL 1 FOR 640.0;
			}
			LEVEL 0 FOR 1260.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 640.0;
			LEVEL 0 FOR 640.0;
		}
		LEVEL 1 FOR 524.719;
	}
}

TRANSITION_LIST("d_out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 315.318;
		NODE
		{
			REPEAT = 14;
			NODE
			{
				REPEAT = 8;
				LEVEL 1 FOR 320.0;
				LEVEL 0 FOR 320.0;
			}
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 2520.0;
			NODE
			{
				REPEAT = 8;
				LEVEL 1 FOR 320.0;
				LEVEL 0 FOR 320.0;
			}
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 620.0;
		}
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 320.0;
		}
		LEVEL 1 FOR 204.682;
	}
}

TRANSITION_LIST("d_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 155.612;
		NODE
		{
			REPEAT = 14;
			NODE
			{
				REPEAT = 18;
				LEVEL 1 FOR 160.0;
				LEVEL 0 FOR 160.0;
			}
			LEVEL 1 FOR 2200.0;
			NODE
			{
				REPEAT = 18;
				LEVEL 0 FOR 160.0;
				LEVEL 1 FOR 160.0;
			}
			LEVEL 0 FOR 300.0;
		}
		NODE
		{
			REPEAT = 11;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
		}
		LEVEL 1 FOR 44.388;
	}
}

TRANSITION_LIST("d_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 75.31;
		NODE
		{
			REPEAT = 14;
			NODE
			{
				REPEAT = 37;
				LEVEL 1 FOR 80.0;
				LEVEL 0 FOR 80.0;
			}
			LEVEL 1 FOR 2040.0;
			NODE
			{
				REPEAT = 37;
				LEVEL 0 FOR 80.0;
				LEVEL 1 FOR 80.0;
			}
			LEVEL 0 FOR 140.0;
		}
		NODE
		{
			REPEAT = 22;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 44.69;
	}
}

TRANSITION_LIST("d_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 35.575;
		NODE
		{
			REPEAT = 14;
			NODE
			{
				REPEAT = 74;
				LEVEL 1 FOR 40.0;
				LEVEL 0 FOR 40.0;
			}
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 2040.0;
			NODE
			{
				REPEAT = 74;
				LEVEL 1 FOR 40.0;
				LEVEL 0 FOR 40.0;
			}
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 60.0;
		}
		NODE
		{
			REPEAT = 46;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 4.425;
	}
}

TRANSITION_LIST("d_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.276;
		NODE
		{
			REPEAT = 149;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 12;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 2040.0;
			NODE
			{
				REPEAT = 299;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 2040.0;
		NODE
		{
			REPEAT = 299;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 2040.0;
		NODE
		{
			REPEAT = 242;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 4.724;
	}
}

TRANSITION_LIST("res")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 200000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "d_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3, 4, 5, 6, 7, 8, 9, 10;
}

DISPLAY_LINE
{
	CHANNEL = "d_out[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "d_out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "d_out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "d_out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "d_out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "d_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "d_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "d_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "d_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "res";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 26600;
	MASTER = TRUE;
}
;
